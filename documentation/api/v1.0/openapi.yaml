openapi: 3.0.1
externalDocs:
  description: Документация
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /data-api/teacher:
    get:
      tags:
      - teacher-controller
      operationId: getTeacher
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherDto'
    put:
      tags:
      - teacher-controller
      operationId: updateTeacher
      responses:
        "200":
          description: OK
    post:
      tags:
      - teacher-controller
      operationId: saveTeacher
      responses:
        "200":
          description: OK
  /data-api/student:
    get:
      tags:
      - student-controller
      operationId: getStudent
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
    put:
      tags:
      - student-controller
      operationId: updateStudent
      responses:
        "200":
          description: OK
    post:
      tags:
      - student-controller
      operationId: saveStudent
      responses:
        "200":
          description: OK
  /data-api/result:
    get:
      tags:
      - result-controller
      operationId: getResult
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultDto'
    put:
      tags:
      - result-controller
      operationId: updateResult
      responses:
        "200":
          description: OK
    post:
      tags:
      - result-controller
      operationId: saveResult
      responses:
        "200":
          description: OK
  /data-api/program:
    get:
      tags:
      - program-controller
      operationId: getProgram
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramDto'
    put:
      tags:
      - program-controller
      operationId: updateProgram
      responses:
        "200":
          description: OK
    post:
      tags:
      - program-controller
      operationId: saveProgram
      responses:
        "200":
          description: OK
  /data-api/profile:
    get:
      tags:
      - profile-controller
      operationId: getProfile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileDto'
    put:
      tags:
      - profile-controller
      operationId: updateProfile
      responses:
        "200":
          description: OK
    post:
      tags:
      - profile-controller
      operationId: saveProfile
      responses:
        "200":
          description: OK
  /data-api/discipline:
    get:
      tags:
      - discipline-controller
      operationId: getDiscipline
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisciplineDto'
    put:
      tags:
      - discipline-controller
      operationId: updateDiscipline
      responses:
        "200":
          description: OK
    post:
      tags:
      - discipline-controller
      operationId: saveDiscipline
      responses:
        "200":
          description: OK
  /data-api/faculty:
    get:
      tags:
      - Работа с данными факультетов
      description: Возвращает список факультетов в организации клиента
      operationId: getFaculty
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
    post:
      tags:
      - Работа с данными факультетов
      description: Сохраняет информацию по факультету организации клиента
      operationId: saveFaculty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
        required: true
      responses:
        "200":
          description: OK
  /prediction-api/student:
    get:
      tags:
      - Работа с моделью предсказания по данным студентов
      description: Возвращает средний балл ближайшей сессии
      operationId: getPredictionForStudent
      parameters:
      - name: studentResults
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StudentResultsDto'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentPredictionResultDto'
components:
  schemas:
    Faculty:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Наименование факультета
      description: "Сущность, описывающая данные по факультету"
    Discipline:
      required:
      - attendanceLectureFirstPeriod
      - attendanceLectureSecondPeriod
      - attendanceLectureThirdPeriod
      - attendancePracticeFirstPeriod
      - attendancePracticeSecondPeriod
      - attendancePracticeThirdPeriod
      - resultControlPointFirst
      - resultControlPointSecond
      - resultSession
      type: object
      properties:
        attendanceLectureFirstPeriod:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Посещаемость лекций за промежуток 1
          format: float
        attendanceLectureSecondPeriod:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Посещаемость лекций за промежуток 2
          format: float
        attendanceLectureThirdPeriod:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Посещаемость лекций за промежуток 3
          format: float
        attendancePracticeFirstPeriod:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Посещаемость практик за промежуток 1
          format: float
        attendancePracticeSecondPeriod:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Посещаемость практик за промежуток 2
          format: float
        attendancePracticeThirdPeriod:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Посещаемость практик за промежуток 3
          format: float
        resultControlPointFirst:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Результат КТ 1
          format: float
        resultControlPointSecond:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Результат КТ 2
          format: float
        resultSession:
          maximum: 0.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Результат сессии
          format: float
      description: "Сущность, описывающая результаты студента по дисциплине"
    Semester:
      required:
      - disciplines
      type: object
      properties:
        disciplines:
          maxItems: 8
          minItems: 1
          type: array
          description: Данные успеваемости по дисциплинам
          items:
            $ref: '#/components/schemas/Discipline'
      description: "Сущность, описывающая данные успеваемости за семестр"
    StudentResultsDto:
      required:
      - semesters
      type: object
      properties:
        semesters:
          maxItems: 8
          minItems: 1
          type: array
          description: Данные успеваемости по семестрам
          items:
            $ref: '#/components/schemas/Semester'
    StudentPredictionResultDto:
      required:
      - predictionResult
      type: object
      properties:
        predictionResult:
          type: integer
          description: "Средний балл студента, округленный до целого"
          format: int32
    TeacherDto:
      type: object
    StudentDto:
      type: object
    ResultDto:
      type: object
    ProgramDto:
      type: object
    ProfileDto:
      type: object
    DisciplineDto:
      type: object
  securitySchemes:
    apiAuth:
      type: apiKey
      description: Api key
      name: Authorization
      in: header
